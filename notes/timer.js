// Generated by CoffeeScript 1.10.0
(function() {
  var Timer,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  module.exports = Timer = (function() {
    function Timer(timeUp, func) {
      this.timeUp = timeUp;
      this.func = func;
      this.halt = bind(this.halt, this);
      this.start = bind(this.start, this);
      this.running = bind(this.running, this);
      this.main = bind(this.main, this);
    }

    Timer.prototype.stop = 0;

    Timer.prototype.count = 0;

    Timer.prototype.main = function() {
      var ref;
      return (ref = typeof this.func === "function" ? this.func() : void 0) != null ? ref : console.log("> " + this.count++);
    };

    Timer.prototype.running = function() {
      this.main();
      if (this.stop === 0) {
        return setTimeout(this.running, 1000);
      }
    };

    Timer.prototype.start = function() {
      if (this.timeUp === 0) {
        this.timeUp = 5000;
      }
      setTimeout(this.halt, this.timeUp);
      return this.running();
    };

    Timer.prototype.halt = function() {
      return this.stop = 1;
    };

    return Timer;

  })();


  /*
  Example use.
  Timer = require "./timer"
  timer = new Timer(3000, func)
  timer.start()
   */

}).call(this);
